---
name: "crowncoin"
suites:
- "precise"
architectures:
- "amd64"
packages:
- "mingw-w64"
- "g++-mingw-w64"
- "git-core"
- "unzip"
- "nsis"
- "faketime"
- "autoconf2.13"
- "libtool"
- "automake"
- "pkg-config"
- "bsdmainutils"

reference_datetime: "2013-06-01 00:00:00"
remotes:
- "url": "https://github.com/Crowndev/crowncoin.git"
  "dir": "crowncoin"
files:
- "native_ccache-3.2.5-2548aa27332.tar.gz"
- "native_comparisontool-8c6666f-ae76cebcfb4.tar.gz"
- "miniupnpc-2.0-ade31f13986.tar.gz"
- "boost-1_59_0-48f3526a1ce.tar.gz"
- "libevent-2.0.22-ac3d1957c86.tar.gz"
- "native_protobuf-2.6.1-0728c8e87ae.tar.gz"
- "openssl-1.0.1k-11402de9d26.tar.gz"
- "protobuf-2.6.1-a71249c2a3b.tar.gz"
- "bdb-4.8.30-e5571ecf082.tar.gz"
- "qrencode-3.4.4-5c9388a44a1.tar.gz"
- "qt-5.6.1-74265c80cbf.tar.gz"
script: |
  # Defines
  export TZ=UTC
  INDIR=$HOME/build
  OPTFLAGS='-O2'
  TEMPDIR="$HOME/tempdir"
  NEEDDIST=1
  # Qt: workaround for determinism in resource ordering
  #  Qt5's rcc uses a QHash to store the files for the resource.
  #  A security fix in QHash makes the ordering of keys to be different on every run
  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).
  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.
  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.
  #  For now luckily there is a test mode that forces a fixed seed.
  export QT_RCC_TEST=1
  for BITS in 32 64; do # for architectures
    #
    STAGING=$HOME/staging64
    BUILDDIR=$HOME/build64
    BINDIR=$OUTDIR/64
#    if [ "$BITS" == "32" ]; then
#      HOST=i686-w64-mingw32
#    else
      HOST=x86_64-w64-mingw32
#    fi
    export PATH=$STAGING/host/bin:$PATH
    mkdir -p $STAGING $BUILDDIR $BINDIR
    #
    cd $STAGING
    tar -xzvf $INDIR/qt-5.6.1-*.tar.gz
    tar -xzvf $INDIR/boost-1_59_0-*.tar.gz
    tar -xzvf $INDIR/native_ccache-3.2.5-*.tar.gz
    tar -xzvf $INDIR/native_comparisontool-*.tar.gz
    tar -xzvf $INDIR/miniupnpc-2.0-*.tar.gz
    tar -xzvf $INDIR/libevent-2.0.22-*.tar.gz
    tar -xzvf $INDIR/native_protobuf-2.6.1-*.tar.gz
    tar -xzvf $INDIR/openssl-1.0.1k-*.tar.gz
    tar -xzvf $INDIR/protobuf-2.6.1-*.tar.gz
    tar -xzvf $INDIR/bdb-4.8.30-*.tar.gz
    tar -xzvf $INDIR/qrencode-3.4.4-*.tar.gz

    if [ "$NEEDDIST" == "1" ]; then
      # Make source code archive which is architecture independent so it only needs to be done once
      cd $HOME/build/crowncoin
      ./autogen.sh
      ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS="-I$STAGING/include ${OPTFLAGS}" LDFLAGS="-L$STAGING/lib ${OPTFLAGS}" CXXFLAGS="-frandom-seed=crowncoin ${OPTFLAGS}"
      make dist
      DISTNAME=`echo crowncoin-*.tar.gz`
      NEEDDIST=0
    fi
    # Build platform-dependent executables from source archive
    cd $BUILDDIR
    mkdir -p distsrc
    cd distsrc
    tar --strip-components=1 -xf $HOME/build/crowncoin/$DISTNAME
    ./configure --enable-upnp-default --bindir=$BINDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS="-I$STAGING/include ${OPTFLAGS}" LDFLAGS="-L$STAGING/lib ${OPTFLAGS}" CXXFLAGS="-frandom-seed=crowncoin ${OPTFLAGS}"
    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
    export FAKETIME=$REFERENCE_DATETIME
    make $MAKEOPTS
    make deploy
    make install-strip
    cp -f crowncoin-*setup*.exe $BINDIR/
    unset LD_PRELOAD
    unset FAKETIME
  done # for BITS in

  # sort distribution tar file and normalize user/group/mtime information for deterministic output
  mkdir -p $OUTDIR/src
  rm -rf $TEMPDIR
  mkdir -p $TEMPDIR
  cd $TEMPDIR
  tar -xvf $HOME/build/crowncoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime="$REFERENCE_DATETIME" | gzip -n > $OUTDIR/src/$DISTNAME

